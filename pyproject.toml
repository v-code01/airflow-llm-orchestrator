[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "airflow-llm-orchestrator"
version = "0.1.0"
description = "AI-Powered Autonomous Pipeline Orchestration for Apache Airflow"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Vansh Verma", email = "vxv210058@utdallas.edu"},
]
keywords = [
    "airflow",
    "llm",
    "ai",
    "orchestration",
    "automation",
    "self-healing",
    "cost-optimization",
    "machine-learning"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Monitoring",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "apache-airflow>=2.5.0",
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "requests>=2.28.0",
    "pydantic>=2.0.0",
    "numpy>=1.21.0",
    "psutil>=5.9.0",
    "aiohttp>=3.8.0",
    "asyncio-throttle>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "pylint>=3.0.0",
    "mypy>=1.5.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "pip-audit>=2.6.0",
    "pre-commit>=3.0.0",
    "tox>=4.0.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "myst-parser>=2.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "coverage>=7.0.0",
]

[project.urls]
Homepage = "https://github.com/v-code01/airflow-llm-orchestrator"
Documentation = "https://airflow-llm-orchestrator.readthedocs.io/"
Repository = "https://github.com/v-code01/airflow-llm-orchestrator.git"
Issues = "https://github.com/v-code01/airflow-llm-orchestrator/issues"
Changelog = "https://github.com/v-code01/airflow-llm-orchestrator/blob/main/CHANGELOG.md"

[project.entry-points."airflow.plugins"]
airflow_llm = "airflow_llm.plugin:AirflowLLMPlugin"

[project.scripts]
airflow-llm = "airflow_llm.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["airflow_llm*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
airflow_llm = ["py.typed", "*.yaml", "*.json"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["airflow_llm"]
known_third_party = ["airflow", "openai", "anthropic", "numpy", "psutil"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[tool.pylint.messages_control]
disable = [
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "W0613",  # unused-argument
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.design]
max-complexity = 10

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["airflow_llm"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "docs/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"
